<fluent:RibbonWindow
    x:Class="PoshConsole.Demo.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fluent="clr-namespace:Fluent;assembly=Fluent"
    xmlns:local="clr-namespace:PoshConsole.Demo"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:poshCode="http://schemas.poshcode.org/wpf/poshcode"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    Title="MainWindow"
    Width="774"
    Height="517"
    MinWidth="80"
    MinHeight="60"
    WindowState="Normal"
    mc:Ignorable="d">
    <fluent:RibbonWindow.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
        </ResourceDictionary>
    </fluent:RibbonWindow.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <fluent:Ribbon x:Name="ribbon" AutomaticStateManagement="True">
            <fluent:Ribbon.ContextualGroups>
                <fluent:RibbonContextualTabGroup
                    x:Name="setupGroup"
                    Background="#FF9D00"
                    BorderBrush="#FF9D00"
                    Foreground="#C45300"
                    Header="Setup"
                    Visibility="Visible" />
                <fluent:RibbonContextualTabGroup
                    x:Name="specialGroup"
                    Background="Magenta"
                    BorderBrush="Magenta"
                    Foreground="Purple"
                    Header="Special"
                    Visibility="Visible" />

            </fluent:Ribbon.ContextualGroups>
            <fluent:Ribbon.Menu>
                <Grid>
                    <!--  Backstage items can be keytipped  -->
                    <fluent:Backstage Visibility="Visible">
                        <fluent:BackstageTabControl />
                    </fluent:Backstage>

                    <fluent:ApplicationMenu Header="File" Visibility="Visible">
                        <fluent:ApplicationMenu.RightPaneContent>
                            <StackPanel
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Orientation="Vertical" />
                        </fluent:ApplicationMenu.RightPaneContent>

                        <fluent:MenuItem Header="New">
                            <fluent:MenuItem Header="Thing" />
                            <fluent:MenuItem Header="Other" />
                        </fluent:MenuItem>
                        <fluent:MenuItem Header="Open" />
                        <fluent:MenuItem Header="Save As" IsSplited="True">
                            <fluent:MenuItem Header="Standard format" />
                            <fluent:MenuItem Header="Export" />
                        </fluent:MenuItem>

                        <Separator />

                        <fluent:MenuItem
                            Command="{Binding ExitCommand}"
                            Header="Exit"
                            KeyTip="X" />
                    </fluent:ApplicationMenu>
                </Grid>
            </fluent:Ribbon.Menu>
            <fluent:Ribbon.ToolBarItems>
                <fluent:Button Content="Insert" Size="Small">
                    <fluent:Button.ToolTip>
                        <fluent:ScreenTip
                            Title="Insert Chart"
                            Width="190"
                            DisableReason="Disable reason reason."
                            HelpTopic="http:\\fluent.codeplex.com"
                            IsRibbonAligned="True"
                            Text="Insert a chart to illustarate and compare data. &#xA;&#xA;Bar, Pie, Line, Area and Surface are same of the available types." />
                    </fluent:Button.ToolTip>
                </fluent:Button>
            </fluent:Ribbon.ToolBarItems>

            <fluent:Ribbon.QuickAccessItems>
                <!--  Quick Access toolbar items automatically have ScreenTips of the target  -->
                <!--  KeyTips in Quick Access Toolbar names automatically  -->

                <!--  Use Content or Target Property to set QAT item  -->
                <fluent:QuickAccessMenuItem IsChecked="true">
                    <fluent:Button Command="{Binding TestCommand}" Header="Pink" />
                </fluent:QuickAccessMenuItem>
                <fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding ElementName=pasteButton}" />
                <fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding ElementName=cutButton}" />
                <fluent:QuickAccessMenuItem Target="{Binding ElementName=copyButton}" />
                <fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding ElementName=UndoButton}" />
                <fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding ElementName=RedoButton}" />
            </fluent:Ribbon.QuickAccessItems>

            <fluent:RibbonTabItem
                Header="Test Cases"
                IsSeparatorVisible="true"
                KeyTip="T"
                ReduceOrder="groupLL, groupLL, groupLL, (groupLL),(groupLL),(groupLL),(groupLL),(groupLL)">
                <fluent:RibbonGroupBox
                    x:Name="PipelineGroup"
                    Header="Pipeline Data to Invoke"
                    IsLauncherVisible="False"
                    KeyTip="TP">
                    <fluent:ComboBox
                        x:Name="ProcessSort"
                        Header="Sort"
                        IsReadOnly="False"
                        KeyTip="S"
                        SelectedIndex="7">
                        <system:String>Id</system:String>
                        <system:String>Handle</system:String>
                        <system:String>Name</system:String>
                        <system:String>NPM</system:String>
                        <system:String>PM</system:String>
                        <system:String>VM</system:String>
                        <system:String>WS</system:String>
                        <system:String>CPU</system:String>
                        <system:String>Path</system:String>
                        <system:String>Product</system:String>

                        <system:String>BasePriority</system:String>
                        <system:String>Container</system:String>
                        <system:String>EnableRaisingEvents</system:String>
                        <system:String>ExitCode</system:String>
                        <system:String>ExitTime</system:String>
                        <system:String>Handles</system:String>
                        <system:String>HandleCount</system:String>
                        <system:String>HasExited</system:String>
                        <system:String>MachineName</system:String>
                        <system:String>MainModule</system:String>
                        <system:String>MainWindowHandle</system:String>
                        <system:String>MainWindowTitle</system:String>
                        <system:String>MaxWorkingSet</system:String>
                        <system:String>MinWorkingSet</system:String>
                        <system:String>Modules</system:String>
                        <system:String>NonpagedSystemMemorySize</system:String>
                        <system:String>NonpagedSystemMemorySize64</system:String>
                        <system:String>PagedMemorySize</system:String>
                        <system:String>PagedMemorySize64</system:String>
                        <system:String>PagedSystemMemorySize</system:String>
                        <system:String>PagedSystemMemorySize64</system:String>
                        <system:String>PeakPagedMemorySize</system:String>
                        <system:String>PeakPagedMemorySize64</system:String>
                        <system:String>PeakVirtualMemorySize</system:String>
                        <system:String>PeakVirtualMemorySize64</system:String>
                        <system:String>PeakWorkingSet</system:String>
                        <system:String>PeakWorkingSet64</system:String>
                        <system:String>PriorityBoostEnabled</system:String>
                        <system:String>PriorityClass</system:String>
                        <system:String>PrivateMemorySize</system:String>
                        <system:String>PrivateMemorySize64</system:String>
                        <system:String>PrivilegedProcessorTime</system:String>
                        <system:String>ProcessName</system:String>
                        <system:String>ProcessorAffinity</system:String>
                        <system:String>Responding</system:String>
                        <system:String>SafeHandle</system:String>
                        <system:String>SessionId</system:String>
                        <system:String>Site</system:String>
                        <system:String>StandardError</system:String>
                        <system:String>StandardInput</system:String>
                        <system:String>StandardOutput</system:String>
                        <system:String>StartInfo</system:String>
                        <system:String>StartTime</system:String>
                        <system:String>SynchronizingObject</system:String>
                        <system:String>Threads</system:String>
                        <system:String>TotalProcessorTime</system:String>
                        <system:String>UserProcessorTime</system:String>
                        <system:String>VirtualMemorySize</system:String>
                        <system:String>VirtualMemorySize64</system:String>
                        <system:String>WorkingSet</system:String>
                        <system:String>WorkingSet64</system:String>
                        <system:String>Company</system:String>
                        <system:String>Description</system:String>
                        <system:String>FileVersion</system:String>
                        <system:String>ProductVersion</system:String>


                    </fluent:ComboBox>
                    <fluent:CheckBox
                        x:Name="ProcessDescending"
                        Header="Descending"
                        IsChecked="True" />
                    <fluent:Spinner
                        x:Name="ProcessCount"
                        Format="N0"
                        Header="Count"
                        Increment="5"
                        Maximum="1000"
                        Minimum="5" />
                    <fluent:Button Click="Pipeline_Click" Header="Pipeline Example" />


                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox x:Name="InvokeGroup" Header="Invocation Methods">
                    <fluent:Button Click="Capture_Click" Header="Capture Example" />

                    <fluent:Button Click="Secret_Click" Header="Secret Example" />
                    <fluent:Button Click="Console_Click" Header="Console Example" />
                    <fluent:Button Click="Error_Click" Header="Error Example" />
                    <fluent:Button Click="Exception_Click" Header="Exception Example" />
                    <fluent:Button Click="Input_Click" Header="Input Example" />
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox
                    x:Name="AnythingGroup"
                    Header="Any Command"
                    IsLauncherVisible="False"
                    KeyTip="TA">
                    <fluent:TextBox x:Name="CommandInput" Header="Pipeline">Word Up It's Fresh</fluent:TextBox>
                    <fluent:TextBox x:Name="Command" Header="Command">Write-Host</fluent:TextBox>
                    <fluent:Button Click="Invoke_Click" Header="Invoke" />


                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>

            <fluent:RibbonTabItem Header="Tests" KeyTip="TESTS">
                <fluent:RibbonGroupBox Header="LongLongGroup" IsLauncherVisible="False">
                    <fluent:CheckBox Header="Text 1" />
                    <fluent:CheckBox Header="Text 2" />
                    <fluent:CheckBox Header="Text 3" />
                </fluent:RibbonGroupBox>


                <fluent:RibbonGroupBox Header="LongLongGroup" IsLauncherVisible="False">
                    <fluent:ToggleButton Header="blah blah" SizeDefinition="Small">
                        <fluent:ToggleButton.Icon>
                            <Grid>
                                <Image />
                                <TextBlock Text="1" />
                            </Grid>
                        </fluent:ToggleButton.Icon>
                    </fluent:ToggleButton>
                    <fluent:SplitButton Header="blah blah" SizeDefinition="Small">
                        <fluent:SplitButton.Icon>
                            <Grid>
                                <Image />
                                <TextBlock Text="1" />
                            </Grid>
                        </fluent:SplitButton.Icon>
                    </fluent:SplitButton>
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox Header="LongLongGroup" IsLauncherVisible="False">
                    <fluent:TextBox
                        x:Name="textBox"
                        Header="Text"
                        InputWidth="70"
                        MaxLength="5"
                        Text="CurrentText" />

                    <fluent:Button Header="PrintVisual" />
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox>
                    <fluent:DropDownButton HorizontalAlignment="Left" SizeDefinition="Small">
                        <fluent:DropDownButton.Icon>
                            <Grid>
                                <Image Width="16" Height="16" />
                                <Rectangle
                                    Width="16"
                                    Height="4"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding ColorViewModel.HighlightColor, Mode=TwoWay}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </fluent:DropDownButton.Icon>
                        <fluent:ColorGallery
                            IsAutomaticColorButtonVisible="False"
                            Mode="HighlightColors"
                            SelectedColor="{Binding ColorViewModel.HighlightColor, Mode=TwoWay}" />
                    </fluent:DropDownButton>
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox Header="ToggleButton">
                    <fluent:ToggleButton GroupName="Group1" Header="Button1" />
                    <fluent:ToggleButton GroupName="Group1" Header="Button1" />
                    <fluent:ToggleButton GroupName="Group1" Header="Button1" />
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox>
                    <fluent:ToggleButton x:Name="ShowDetailButton" Header="Detail" />
                    <fluent:ToggleButton x:Name="ShowMoreButton" Header="More" />
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox Header="TestOne">
                    <fluent:ComboBox Header="Test" InputWidth="120" />
                    <Separator />

                    <fluent:ComboBox
                        Header="Test"
                        InputWidth="120"
                        Visibility="Visible" />
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox>
                    <fluent:ComboBox Header="Test" InputWidth="120" />
                    <Separator />

                    <fluent:ComboBox
                        Header="Test"
                        InputWidth="120"
                        Visibility="Visible" />
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox>
                    <fluent:ComboBox Header="Test" InputWidth="120" />
                    <Separator />

                    <fluent:ComboBox
                        Header="Test"
                        InputWidth="120"
                        Visibility="{Binding IsChecked, Converter={StaticResource boolToVisibilityConverter}, ElementName=ShowDetailButton}" />
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox Visibility="{Binding IsChecked, Converter={StaticResource boolToVisibilityConverter}, ElementName=ShowMoreButton}">
                    <fluent:ComboBox Header="Test" InputWidth="120" />
                    <Separator />

                    <fluent:ComboBox
                        Header="Test"
                        InputWidth="120"
                        Visibility="{Binding IsChecked, Converter={StaticResource boolToVisibilityConverter}, ElementName=ShowDetailButton}" />
                </fluent:RibbonGroupBox>

            </fluent:RibbonTabItem>

        </fluent:Ribbon>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>
            <GridSplitter
                Grid.Row="0"
                Height="5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Bottom" />
            <ItemsControl
                x:Name="MainContent"
                Grid.Row="0"
                ItemsSource="{Binding}" />

            <StackPanel x:Name="Progress" Grid.Row="1" />
            <poshCode:PoshConsole
                x:Name="PoshConsole"
                Title="PoshConsole"
                Grid.Row="2"
                Padding="4,0,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="#00000000"
                Content="MainContent"
                FontFamily="Consolas"
                FontSize="12"
                IsSelectionEnabled="True"
                Progress="Progress"
                PromptForChoice="Console_PromptForChoice" />
        </Grid>

        <fluent:StatusBar
            Grid.Row="2"
            Height="25"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Bottom"
            DataContext="{Binding ElementName=PoshConsole}">
            <fluent:StatusBarItem
                Title="Words Width"
                HorizontalAlignment="Left"
                Value="150">
                <TextBlock Text="{Binding BufferSize, Mode=OneWayToSource}" />
            </fluent:StatusBarItem>
            <Separator HorizontalAlignment="Left" />
            <fluent:StatusBarItem
                Title="Selected Words"
                HorizontalAlignment="Left"
                Content="15"
                ToolTip="This is Selected Words"
                Value="15" />
            <Separator HorizontalAlignment="Left" />
            <fluent:StatusBarItem
                Title="Zoom"
                HorizontalAlignment="Right"
                Value="{Binding Value, ElementName=zoomSlider, StringFormat=\{0:P\}}" />
            <fluent:StatusBarItem Title="Zoom Slider" HorizontalAlignment="Right">
                <Slider
                    x:Name="zoomSlider"
                    IsDirectionReversed="False"
                    IsSnapToTickEnabled="True"
                    LargeChange="0.1"
                    Maximum="2.0"
                    Minimum="0.5"
                    SmallChange="0.1"
                    Style="{DynamicResource ZoomSliderStyle}"
                    TickFrequency="0.1"
                    ValueChanged="ZoomSlider_OnValueChanged"
                    Value="{Binding Zoom}" />
            </fluent:StatusBarItem>
        </fluent:StatusBar>
    </Grid>
</fluent:RibbonWindow>
