//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PoshCode.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PoshCode.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function global:prompt {
        ///   # FIRST, make a note if there was an error in the previous pipeline
        ///   $err = !$?
        ///
        ///   # Make sure Windows and .Net know where we are (they can only handle the FileSystem)
        ///   [Environment]::CurrentDirectory = (Get-Location -PSProvider FileSystem).ProviderPath
        ///   
        ///   # Determine what nesting level we are at (if any)
        ///   $Nesting = &quot;$([char]0xB7)&quot; * $NestedPromptLevel
        ///
        ///   # Generate PUSHD(push-location) Stack level string
        ///   $Stack = &quot;+&quot; * (Get-Location -Stack).count
        ///           /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Prompt {
            get {
                return ResourceManager.GetString("Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function global:TabExpansion2 {
        ///&lt;# Options include:
        ///     RelativeFilePaths - [bool]
        ///         Always resolve file paths using Resolve-Path -Relative.
        ///         The default is to use some heuristics to guess if relative or absolute is better.
        ///
        ///   To customize your own custom options, pass a hashtable to CompleteInput, e.g.
        ///         return [System.Management.Automation.CommandCompletion]::CompleteInput($inputScript, $cursorColumn,
        ///             @{ RelativeFilePaths=$false } 
        ///#&gt;
        ///
        ///[CmdletBinding(Default [rest of string was truncated]&quot;;.
        /// </summary>
        public static string TabExpansion2 {
            get {
                return ResourceManager.GetString("TabExpansion2", resourceCulture);
            }
        }
    }
}
